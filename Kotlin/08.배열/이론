08. 배열
- 하나의 변수에 여러개의 값을 할당하고 싶은 경우
var number: Int = 10
var examScores: Int = 100, 98, 75
- 배열은 저장될 수 있는 값의 개수를 정해놓아야함. 변경 불가능

1. 배열을 선언하는 방법 (1)
- arrayOf<자료형(생략가능)>(값1, 값2, 값3) = 자료형ArrayOf(값1, 값2, 값3)
    - 생략했을 경우 복수개의 자료형이 배열의 인자로 올 수 있음 => non-null, nullable 모두 가능
    - var array1 = arrayOf(true, false, "안녕하세요", 10, 2.2)
- 자료형을 적어줬을 경우, 해당 자료형만 인자로 들어올 수 있음
    - var array2 = arrayOf<Int>(10, 20, 30)
    - var array3 = arrayOf<Double>(2.2, 4.5)
- <자료형>을 대체할 수 있는 방법
    - var array4 = intArrayOf(1, 2, 3, 4, 5)
    - var array5 = booleanArrayOf(true, false, true)
- null을 인자로 받는 배열
    - var nulls = arrayOfNulls<Int>(4)

2. 배열을 선언하는 방법 (2)
- 자료형(생략가능)Array(크기, {값(생략가능)})
    - var array6 = Array(10, {0}) => 크기 10짜리 배열을 만들고 기본값으로 0
- 자료형 명시
    - var array7 = IntArray(10, {0})
    - var array8 = DoubleArray(10, {0.0})
    - var array9 = StringArray(10, {"Hi"}) => 불가능

3. 배열을 선언하는 방법 (3)
- Array<자료형(생략가능)>(크기, {값(생략가능)})
    - var array10 = Array(10, {0}) => 자료형 생략했을 경우에는 디폴트 값의 자료형으로 정해짐
    - var array11 = Array<Int>(10. {0})
    - var array12 = Array<String>(10, {"Hi"})

4. 배열에 값을 넣는 방법
- 1번 방법 => 배열명[index] = 값
    - array11[2] = 100
    - array11[0] = 1
- 2번 방법 => 배열명.set(index, 값)
    - array11.set(2, 100)
    - array11.set(0, 1)

5. 배열에 있는 값을 가져오는 방법
- 1번 방법 => 배열명[index]
    - val VALUE = array12[3]
- 2번 방법 => 배열명.get(index)
    - val VALUE2 = array12.get(3)

추가
- 개발언어는 문법적인 요소만 있는 것이 아니라, 일반적으로 개발자가 많이 사용하는 기능들을 기본적으로 포함하고
- 만역에 내가 원하는 기능이 기본적으로 포함된 기능이 아니라면, 만들어서 사용하거나 그 기능을 추가하면 됨(라이브러리)